package com.prf.inventario.service;

import javax.naming.AuthenticationException;

import org.apache.tomcat.util.net.openssl.ciphers.Authentication;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.mysql.cj.protocol.AuthenticationProvider;
import com.mysql.cj.x.protobuf.MysqlxCrud.Collection;
import com.prf.inventario.model.Usuario;

@Component
public class AuthProviderService implements AuthenticationProvider {

    @Autowired
    private UsuarioService usuarioService;

    @Override
    public Authentication authenticate(Authentication auth) throws AuthenticationException {
        String login = auth.getName();
        String senha = auth.getCredentials().toString();

        // Defina suas regras para realizar a autenticação

        if (usuarioBd != null) {
            if (usuarioAtivo(usuarioBd)) {
                Collection<? extends GrantedAuthority> authorities = usuarioBd.getPapeis();
                return new UsernamePasswordAuthenticationToken(login, senha, authorities);
            } else {
                throw new BadCredentialsException("Este usuário está desativado.");
            }
        }

        throw new UsernameNotFoundException("Login e/ou Senha inválidos.");
    }

    @Override
    public boolean supports(Class<?> auth) {
        return auth.equals(UsernamePasswordAuthenticationToken.class);
    }

    private boolean usuarioAtivo(Usuario usuario) {
        if (usuario != null) {
            if (usuario.getStatus() == true) {
                return true;
            }
        }
        return false;
    }
}